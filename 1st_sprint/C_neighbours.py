# Дана матрица. Нужно написать функцию, которая для элемента возвращает всех
# его соседей. Соседним считается элемент, находящийся от текущего на одну
# ячейку влево, вправо, вверх или вниз. Диагональные элементы соседними 
# не считаются.

# Например, в матрице A соседними элементами для (0, 0) будут 2 и 0. 
# А для (2, 1) –— 1, 2, 7, 7.11

# Формат ввода
# В первой строке задано n — количество строк матрицы. Во второй — количество
# столбцов m. Числа m и n не превосходят 1000. В следующих n строках задана
# матрица. Элементы матрицы — целые числа, по модулю не превосходящие 1000. 
# В последних двух строках записаны координаты элемента, соседей которого нужно
# найти. Индексация начинается с нуля.

# Формат вывода
# Напечатайте нужные числа в возрастающем порядке через пробел.


def main():
    n = int(input())
    m = int(input())
    matrix = [list(map(int, input().split())) for _ in range(n)]
    row = int(input())
    col = int(input())
    row_shift = (-1, 0, 1, 0)
    col_shift = (0, 1, 0, -1)
    result = []
    
    for i in range(4):
        pos_row = row + row_shift[i]
        pos_col = col + col_shift[i]
        if pos_row < 0 or pos_col < 0: continue
        try: result.append(matrix[pos_row][pos_col])
        except IndexError: continue
    print(' '.join(map(str, sorted(result))))

if __name__ == '__main__':
    main()